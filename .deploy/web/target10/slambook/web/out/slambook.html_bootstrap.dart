import "dart:json" as EE;import "dart:async" as RB;import "dart:collection" as tB;import "dart:html" as n;import "dart:isolate" as ZE;class FE{static const  GE="Chrome";static const  HE="Firefox";static const  IE="Internet Explorer";static const  JE="Safari";final  lD;final  minimumVersion;const FE(this.lD,[this.minimumVersion]);}class KE{const KE();}class LE{final  name;const LE(this.name);}class ME{const ME();}class NE{const NE();} bC(){} cC(){var gE=n.document.body;var hE;var iE=new ID(gE);hE=gE.nodes[3].nodes[1];iE.ZB(new OE()..host=hE);iE.mB();iE.insert();}main(){MC=true;MB.vB.wD.listen((g){print('${g.nB.name.toLowerCase()}: ${g.message}');});bC();cC();}class OE extends QC with w{var jE;static final dC=new n.DocumentFragment.html('''
      <div class="entry">
        <label>First name?</label>
        <input type="text">
      </div>
      <div class="entry">
        <label>Favorite quote?</label>
        <textarea></textarea>
      </div> 
      <div class="entry">
        <label>Favorite color?</label>
        <input type="color">
      </div>
      <div class="entry">
        <label>Birthday?</label>
        <input type="date">
      </div>
      <div class="entry">
        <label>Favorite volume?</label>
        <input type="range" min="0" max="11">  
      </div>
      <div class="entry">
        <label>Cat or dog?</label>
        <input name="catOrDog" type="radio" value="cat">Cat
        <input name="catOrDog" type="radio" value="dog">Dog
        <input name="catOrDog" type="radio" value="iguana">Iguana
      </div>
      <div>
        <label>Favorite type of music?</label>
        <select>
          <option>Classical</option>
          <option>Country</option>
          <option>Rock</option>
          <option>Silence</option>
        </select>
      </div>
      <div class="entry">
        <label for="zombies">Check for zombies. </label>
        <input type="checkbox" id="zombies">
      </div>
      <div class="entry">
        <label>Favorite things?</label>
        <input type="checkbox" id="kittens">
          <label for="kittens" class="andrews">Kittens</label>
        <input type="checkbox" id="raindrops">
          <label for="raindrops" class="andrews">Raindrops</label>
        <input type="checkbox" id="mittens">
          <label for="mittens" class="andrews">Mittens</label>
        <input type="checkbox" id="kettles">
          <label for="kettles" class="andrews">Kettles</label>
      </div>

      <div class="submitarea">
        <input type="submit" value="Submit">
        <input type="reset" value="Clear"> <br>    
        <textarea disabled="" class="responsetext"></textarea>
      </div>
      
      <script type="application/dart" src="xslambookform.dart">
      </script>
    ''');var kE,lE,mE,nE,oE,pE,qE,rE,sE,tE,uE,vE,wE,xE;var yE;var zE;var AF,BF; pD(){var CF=createShadowRoot("x-slambook-form");BE("x-slambook-form",new EC({"x-slambook-form":"[is=\"x-slambook-form\"]"}));jE=qD("x-slambook-form");zE=new ID(CF);CF.nodes.add(dC.clone(true));kE=CF.nodes[1].nodes[3];zE.listen(kE.onInput,(h){m['firstName']=kE.value;});zE.DB(()=>m['firstName'],(g){if(kE.value!=g)kE.value=g;},false,false);BF=CF.nodes[3].nodes[3];zE.listen(BF.onInput,(h){m['favoriteQuote']=BF.value;});zE.DB(()=>m['favoriteQuote'],(g){if(BF.value!=g)BF.value=g;},false,false);sE=CF.nodes[5].nodes[3];zE.listen(sE.onInput,(h){m['favoriteColor']=sE.value;});zE.DB(()=>m['favoriteColor'],(g){if(sE.value!=g)sE.value=g;},false,false);tE=CF.nodes[7].nodes[3];zE.listen(tE.onInput,(h){m['birthday']=tE.value;});zE.DB(()=>m['birthday'],(g){if(tE.value!=g)tE.value=g;},false,false);uE=CF.nodes[9].nodes[3];zE.listen(uE.onInput,(h){m['volume']=uE.value;});zE.DB(()=>m['volume'],(g){if(uE.value!=g)uE.value=g;},false,false);vE=CF.nodes[11].nodes[3];zE.listen(vE.onChange,(h){m['catOrDog']='cat';});zE.DB(()=>m['catOrDog']=='cat',(g){if(vE.checked!=g)vE.checked=g;},false,false);wE=CF.nodes[11].nodes[5];zE.listen(wE.onChange,(h){m['catOrDog']='dog';});zE.DB(()=>m['catOrDog']=='dog',(g){if(wE.checked!=g)wE.checked=g;},false,false);xE=CF.nodes[11].nodes[7];zE.listen(xE.onChange,(h){m['catOrDog']='iguana';});zE.DB(()=>m['catOrDog']=='iguana',(g){if(xE.checked!=g)xE.checked=g;},false,false);yE=CF.nodes[13].nodes[3];zE.listen(yE.onChange,(h){m['music']=yE.selectedIndex;});zE.DB(()=>m['music'],(g){if(yE.selectedIndex!=g)yE.selectedIndex=g;},false,false);lE=CF.nodes[15].nodes[3];zE.listen(lE.onChange,(h){m['zombies']=lE.checked;});zE.DB(()=>m['zombies'],(g){if(lE.checked!=g)lE.checked=g;},false,false);mE=CF.nodes[17].nodes[3];zE.listen(mE.onChange,(h){HB['kittens']=mE.checked;});zE.DB(()=>HB['kittens'],(g){if(mE.checked!=g)mE.checked=g;},false,false);nE=CF.nodes[17].nodes[7];zE.listen(nE.onChange,(h){HB['raindrops']=nE.checked;});zE.DB(()=>HB['raindrops'],(g){if(nE.checked!=g)nE.checked=g;},false,false);oE=CF.nodes[17].nodes[11];zE.listen(oE.onChange,(h){HB['mittens']=oE.checked;});zE.DB(()=>HB['mittens'],(g){if(oE.checked!=g)oE.checked=g;},false,false);pE=CF.nodes[17].nodes[15];zE.listen(pE.onChange,(h){HB['kettles']=pE.checked;});zE.DB(()=>HB['kettles'],(g){if(pE.checked!=g)pE.checked=g;},false,false);qE=CF.nodes[19].nodes[1];zE.listen(qE.onClick,(h){DE(h);});rE=CF.nodes[19].nodes[3];zE.listen(rE.onClick,(h){zD(h);});AF=CF.nodes[19].nodes[7];zE.listen(AF.onInput,(h){aB=AF.value;});zE.DB(()=>aB,(g){if(AF.value!=g)AF.value=g;},false,false);zE.mB();} sD(){zE.insert();} yD(){zE.remove();zE=kE=BF=sE=tE=uE=vE=wE=xE=yE=lE=mE=nE=oE=pE=qE=rE=AF=null;}var DF=IC({'kittens':true,'raindrops':false,'mittens':true,'kettles':false}); get HB{if(t){CB(this,k.s,'favoriteThings');}return DF;}var FF=IC({'firstName':'mem','favoriteQuote':'Enjoy all your meals.','favoriteColor':'#4169E1','birthday':'1963-08-30','volume':'11','catOrDog':'dog','music':2,'zombies':true}); get m{if(t){CB(this,k.s,'theData');}return FF;}var GF=''; get aB{if(t){CB(this,k.s,'serverResponse');}return GF;}set aB( g){if(KB(this)){o(this,k.s,'serverResponse',GF,g);}GF=g;}var request; DE( g){g.preventDefault();request=new n.HttpRequest();request.onReadyStateChange.listen(onData);var h='http://127.0.0.1:4040';request.open('POST',h);request.send(CE());} onData(HF){if(request.readyState==n.HttpRequest.DONE&&request.status==200){aB='Server Sez: '+request.responseText;}else if(request.readyState==n.HttpRequest.DONE&&request.status==0){aB='No server';}} zD( g){g.preventDefault();HB['kittens']=false;HB['raindrops']=false;HB['mittens']=false;HB['kettles']=false;m['firstName']='';m['favoriteQuote']='';m['favoriteColor']='#FFFFFF';m['birthday']='2013-01-01';m['volume']='0';m['catOrDog']='cat';m['music']=0;m['zombies']=false;aB='Data cleared.';} CE(){m['favoriteThings']=HB;return EE.stringify(m);}}var uB=false;var eC=v.HC;class MB{final  name; get VC=>(parent==null||parent.name=='')?name:'${parent.VC}.${name}';final  parent;var IF;var children;var JF;var KF;factory MB( g){if(g.startsWith('.')){throw new ArgumentError("name shouldn't start with a '.'");}if(cB==null)cB=<String,MB>{};if(cB.containsKey(g))return cB[g];var j=g.lastIndexOf('.');var h=null;var i;if(j==-1){if(g!='')h=new MB('');i=g;}else{h=new MB(g.substring(0,j));i=g.substring(j+1);}final l=new MB.aE(i,h);cB[g]=l;return l;}MB.aE(this.name,this.parent):children=new Map<String,MB>(){if(parent!=null)parent.children[name]=this;} get nB{if(uB){if(IF!=null)return IF;if(parent!=null)return parent.nB;}return eC;} get wD=>LF(); tD( g)=>(g>=nB); log( i, l,[j]){if(tD(i)){var h=new dB(i,l,VC,j);if(uB){var g=this;while (g!=null){g.MF(h);g=g.parent;}}else{vB.MF(h);}}} info( h,[g])=>log(v.HC,h,g); FC( h,[g])=>log(v.fC,h,g); LF(){if(uB||parent==null){if(JF==null){JF=new RB.StreamController<dB>.broadcast(sync:true);KF=JF.stream;}return KF;}else{return vB.LF();}} MF( g){if(JF!=null){JF.add(g);}}static  get vB=>new MB('');static var cB;}class v implements Comparable<v>{final  name;final  value;const v(this.name,this.value);static const  HC=const v('INFO',800);static const  fC=const v('WARNING',900); operator==( g)=>g!=null&&value==g.value; operator<( g)=>value<g.value; operator<=( g)=>value<=g.value; operator>( g)=>value>g.value; operator>=( g)=>value>=g.value; compareTo( g)=>value-g.value; get hashCode=>value; toString()=>name;}class dB{final  nB;final  message;final  uD;final  time;final  AE;static var gC=0;var exception;dB(this.nB,this.message,this.uD,[this.exception]):time=new DateTime.now(),AE=dB.gC++ ;}class hC<NB> extends DD with w implements List<NB>{final  NF;hC([ g]):NF=g!=null?new List<NB>(g):<NB>[] ;factory hC.bE( g)=>new hC<NB>()..addAll(g); get length{if(t)CB(this,k.s,'length');return NF.length;}set length( h){var i=NF.length;if(i==h)return;if(KB(this)){if(h<i){for(int g=i-1;g>=h;g-- ){o(this,k.PB,g,NF[g],null);}o(this,k.s,'length',i,h);}else{o(this,k.s,'length',i,h);for(int g=i;g<h;g++ ){o(this,k.SB,g,null,null);}}}NF.length=h;} operator[]( g){if(t)CB(this,k.IB,g);return NF[g];}operator[]=( g, h){var i=NF[g];if(KB(this)){o(this,k.IB,g,i,h);}NF[g]=h;} sublist( h,[ g])=>new hC<NB>.bE(super.sublist(h,g)); add( h){var g=NF.length;if(KB(this)){o(this,k.s,'length',g,g+1);o(this,k.SB,g,null,h);}NF.add(h);} removeRange( h, g){if(g==0)return;LC.BD(this,h,g);if(KB(this)){for(int i=h;i<g;i++ ){o(this,k.PB,i,this[i],null);}}LC.AD(this,h+g,this,h,this.length-g-h);this.length=this.length-g;} toString(){if(t){for(int g=0;g<length;g++ ){CB(this,k.IB,g);}}return NF.toString();}}typedef  eB<AB,u>();class VB<AB,u> extends w implements Map<AB,u>{final  OF;var PF;var QF;VB({ createMap}):OF=createMap!=null?createMap():new Map<AB,u>(){PF=new iC<AB,u>(this);QF=new jC<AB,u>(this);}factory VB.cE( i,{ createMap}){var g=new VB<AB,u>(createMap:createMap);i.forEach(( h, j){g[h]=j;});return g;} get keys=>PF; get values=>QF; get length{if(t)CB(this,k.s,'length');return OF.length;} get isEmpty=>length==0; get isNotEmpty=>length!=0; RF( g)=>CB(this,k.IB,g); SF(){CB(this,k.s,'length');OF.keys.forEach(RF);} containsKey( g){if(t)RF(g);return OF.containsKey(g);} operator[]( g){if(t)RF(g);return OF[g];} operator[]=( h, g){var j=OF.length;var i=OF[h];OF[h]=g;if(KB(this)){if(j!=OF.length){o(this,k.s,'length',j,OF.length);o(this,k.SB,h,i,g);}else if(i!=g){o(this,k.IB,h,i,g);}}} putIfAbsent( g, j()){if(t)RF(g);var h=OF.length;var i=OF.putIfAbsent(g,j);if(KB(this)&&h!=OF.length){o(this,k.s,'length',h,OF.length);o(this,k.SB,g,null,i);}return i;} remove( g){if(t)RF(g);var h=OF.length;var i=OF.remove(g);if(KB(this)&&h!=OF.length){o(this,k.PB,g,i,null);o(this,k.s,'length',h,OF.length);}return i;} addAll( h)=>h.forEach((g,i){this[g]=i;}); clear(){var g=OF.length;if(KB(this)&&g>0){OF.forEach((i,h){o(this,k.PB,i,h,null);});o(this,k.s,'length',g,0);}OF.clear();} forEach( g( key, value)){if(t)SF();OF.forEach(g);} toString()=>tB.Maps.mapToString(this);}class iC<AB,u> extends tB.IterableBase<AB>{final  OF;iC(this.OF); get iterator=>new PE<AB,u>(OF);}class PE<AB,u> implements Iterator<AB>{final  OF;final  PF;var TF=false;PE( g):OF=g,PF=g.OF.keys.iterator; moveNext(){if(t)CB(OF,k.s,'length');return TF=PF.moveNext();} get current{var g=PF.current;if(t&&TF)OF.RF(g);return g;}}class jC<AB,u> extends tB.IterableBase<u>{final  OF;jC(this.OF); get iterator=>new QE<AB,u>(OF);}class QE<AB,u> implements Iterator<u>{final  OF;final  PF;final  QF;var TF;QE( g):OF=g,PF=g.OF.keys.iterator,QF=g.OF.values.iterator; moveNext(){if(t)CB(OF,k.s,'length');var h=PF.moveNext();var g=QF.moveNext();if(h!=g){throw new StateError('keys and values should be the same length');}return TF=g;} get current{if(t&&TF)OF.RF(PF.current);return QF.current;}}typedef  LB( e);typedef  kC( changes);typedef  OB();typedef  lC();class oB{final oldValue;final newValue;final  changes;oB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is oB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>xC(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class k{static const s=1;static const IB=2;static const SB=IB|4;static const PB=IB|8;final  type;final key;final oldValue;final newValue;k(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is k&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>yC(type,key,oldValue,newValue); toString(){var g;switch (type){case s:g='field';break;case IB:g='index';break;case SB:g='insert';break;case PB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} mC(g, i,[ l]){if(g is w){var h=g;return wB(h,(q){i(new oB(h,h,q));});}var j=new pB(g,i,l);if(!j.UF()){return oC;}return j.VF;} wB( g, i){if(g.YB==null)g.YB=new xB();var h=g.YB.add(i);return h.remove;}IC(g){if(g is Map){var h=null;if(g is tB.SplayTreeMap){h=()=>new tB.SplayTreeMap();}else if(g is tB.LinkedHashMap){h=()=>new tB.LinkedHashMap();}return new VB.cE(g,createMap:h);}if(g is Set)return new KC.dE(g);if(g is Iterable)return new hC.bE(g);return g;}class w{var YB;var XB;final  hashCode= ++w.nC;static var nC=0;} KB( g)=>g.YB!=null&&g.YB.head!=null; get t=>WB!=null; CB( g, h,i)=>WB.WF(g,h,i); o( g, j,l, h, i){if((j&(k.SB|k.PB))==0){if(h==i)return;}if(TB==null){TB=[] ;zC(pC);}if(g.XB==null){g.XB=[] ;TB.add(g);}g.XB.add(new k(j,l,h,i));} oC(){}var WB;var JC=100;var TB;var UB; pC(){var q=0;while (TB!=null||UB!=null){var j=TB;TB=null;var i=UB;UB=null;if(q++ ==JC){qC(j,i);return;}if(j!=null){for(var h in j){var QB=h.XB;h.XB=null;for(var g=h.YB.head;g!=null;g=g.next){var l=g.value;try {l(QB);}catch (bB,BB){fB(bB,BB,l,'from ${h}');}}}}if(i!=null){i.forEach((aC,GC){GC.XF();});}}} qC( l, j){var g=[] ;if(l!=null){for(var i in l){var QB=i.XB;g.add('${i} ${QB}');}}if(j!=null){for(var q in j.values){var h=q.XF();if(h!=null)g.add('${q} ${h}');}}TB=null;UB=null;var BB='exceeded notifiction limit of ${JC}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';tC(BB);}class pB{static var rC=0;final  YF= ++pB.rC;final  ZF;final  aF;final  bF;final  cF=new Map();final  dF=[] ;var eF=false;var fF;pB(this.ZF,this.aF,this.bF); toString()=>bF!=null?'<observer ${YF}: ${bF}>':'<observer ${YF}>'; UF(){var h=WB;WB=this;try {fF=ZF();if(fF is Iterable&&fF is !List&&fF is !w){fF=(fF as Iterable).toList();}}catch (g,i){fB(g,i,ZF,'from ${this}');fF=null;}cF.forEach(gF);cF.clear();assert(WB==this);WB=h;hF();return dF.length>0;} iF( i){try {aF(i);}catch (g,h){fB(g,h,aF,'from ${this}');}} hF(){var g=fF;if(g is !w)return;dF.add(wB(g,(h){iF(new oB(g,g,h));}));} WF( q, BB,g){var i=cF.putIfAbsent(q,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|BB;}catch (j,l){fB(j,l,g,'hashCode or operator == from ${this}');}} gF( i, j){dF.add(wB(i,(l){if(eF)return;for(var g in l){var h=j[g.key];if(h!=null&&(h&g.type)!=0){eF=true;if(UB==null){UB=new tB.SplayTreeMap();}UB[YF]=this;return;}}}));} VF(){for(var g in dF){g();}eF=false;} XF(){if(!eF)return null;var g=fF;VF();UF();try {if(g==fF)return null;}catch (i,j){fB(i,j,g,'operator == from ${this}');return null;}var h=new oB(g,fF);iF(h);return h;}}typedef  sC( message);var tC=(g)=>print(g);typedef  uC(error,stackTrace,obj, message);var fB=vC; vC(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class KC<JB> extends CD with w implements Set<JB>{final  jF;final  kF;KC({ createMap}):jF=createMap!=null?createMap():new Map<JB,Object>(),kF=createMap;factory KC.dE( g,{ createMap}){return new KC<JB>(createMap:createMap)..addAll(g);} contains( g){if(t)CB(this,k.IB,g);return jF.containsKey(g);} add( g){var h=jF.length;jF[g]=const Object();if(h!=jF.length){o(this,k.s,'length',h,jF.length);o(this,k.SB,g,null,g);}} remove( g){if(t)CB(this,k.IB,g);var h=jF.length;jF.remove(g);if(h!=jF.length){if(KB(this)){o(this,k.PB,g,g,null);o(this,k.s,'length',h,jF.length);}return true;}return false;} clear(){if(KB(this)){for(var g in jF.keys){o(this,k.PB,g,g,null);}o(this,k.s,'length',jF.length,0);}jF.clear();} get length{if(t)CB(this,k.s,'length');return jF.length;} get isEmpty=>length==0; get iterator=>new RE<JB>(this); addAll( g)=>g.forEach(add); toString(){if(t){for(JB g in jF.keys){CB(this,k.IB,g);}}return jF.keys.toSet().toString();}}class RE<JB> implements Iterator<JB>{final  lF;final  mF;var nF=false;RE( g):lF=g,mF=g.jF.keys.iterator; moveNext(){lF.length;return nF=mF.moveNext();} get current{var g=mF.current;if(t&&nF)CB(lF,k.IB,g);return g;}}class wC{}class FB<GB>{var oF;var pF;var qF;var rF;FB.eE( g,this.qF):rF=g{if(qF!=null)qF.sF++ ;} get next=>pF; get value=>rF;set value( g)=>rF=g; tF( g, h){pF=h;oF=g;if(g!=null)g.pF=this;if(h!=null)h.oF=this;return this;} append( g)=>new FB<GB>.eE(g,qF).tF(this,pF); remove(){if(qF==null)return;qF.sF-- ;if(oF!=null){oF.pF=pF;}else{qF.uF=pF;}if(pF!=null){pF.oF=oF;}else{qF.vF=oF;}pF=null;oF=null;qF=null;}}class xB<GB> extends tB.IterableBase<GB>{var uF;var vF; get length=>sF;var sF=0;xB(){} get head=>uF; add( h){var g=new FB<GB>.eE(h,this);if(vF==null)return uF=vF=g;return vF=g.tF(vF,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new SE<GB>(this);}class SE<GB> implements Iterator<GB>{var wF;var qF;var xF;var yF=-1;SE(this.qF){wF=new List<FB>(qF.length);var h=0;var g=qF.head;while (g!=null){wF[h++ ]=g;g=g.next;}} get current=>xF; moveNext(){do{yF++ ;}while(yF<wF.length&&wF[yF].qF!=qF);if(yF<wF.length){xF=wF[yF].value;return true;}else{xF=null;return false;}}}gB(h,g)=>h.hashCode*31+g.hashCode;xC(h,g,i)=>gB(gB(h,g),i);yC(g,i,h,j)=>gB(gB(g,i),gB(h,j)); zC( h()){var g=new ZE.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);}class LC{static  AD( q, g, BB, i, l){if(g==null)g=0;if(i==null)i=0;if(g<i){for(int h=g+l-1,j=i+l-1;h>=g;h-- ,j-- ){BB[j]=q[h];}}else{for(int h=g,j=i;h<g+l;h++ ,j++ ){BB[j]=q[h];}}}static  BD( j, h, g){if(g<0){throw new ArgumentError("negative length ${g}");}if(h<0){var i="${h} must be greater than or equal to 0";throw new RangeError(i);}if(h+g>j.length){var i="${h} + ${g} must be in the range [0..${j.length})";throw new RangeError(i);}}}abstract class CD extends tB.IterableBase<dynamic>{}abstract class DD extends tB.ListMixin<dynamic>{} ED(g){if(g is wC)return g.toString();g=g.toString();return GD(g)?g:'#';}const FD=const["http","https","ftp","mailto"]; GD( h){var g=Uri.parse(h).scheme;if(g=='')return true;return FD.contains(g.toLowerCase())||"MAILTO"==g.toUpperCase();}abstract class hB{ mB(){} insert(); remove();}class TE extends hB{final  UC;var zF;final  listener;TE(this.UC,this.listener); insert(){zF=UC.listen(listener);} remove(){zF.cancel();zF=null;}}abstract class HD extends hB{final exp;final  isFinal;final  SC;var sB;HD(this.exp,this.isFinal):SC=yB&&qB!=null?qB():null; insert(){if(isFinal){WC();}else if(sB!=null){throw new StateError('binding already attached');}else{sB=YC();}} remove(){if(!isFinal){sB();sB=null;}} WC(); YC();}class UE extends HD{final  ZC;final  XC;UE( g,this.ZC,this.XC, h):super(g,h); AG(g){ZC(XC?ED(g):g);} WC()=>AG(exp()); YC()=>LD(exp,(g)=>AG(g.newValue),'dom-property-binding',SC);}class VE extends hB{final ZB;VE(this.ZB); mB(){ZB..pD()..oD()..nD();} insert(){ZB..rD()..sD();} remove(){ZB..yD()..xD();}}class ID extends hB{final  vD;final  children=[] ;final  nodes=[] ;ID(this.vD); listen( i, h){children.add(new TE(i,(g){h(g);ND();}));} DB(g,j,h,[i=false]){children.add(new UE(g,j,i,h));} ZB( g){children.add(new VE(g));} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); mB(){for(var g=0,h=children.length;g<h;g++ ){children[g].mB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}var MC=false;var yB=false;var qB=(){try {throw "";}catch (h,g){return g.toString();}};final  iB=new MB('watcher'); JD(g, BB,[ j, q]){if(MC)return mC(g,BB);if(BB==null)return (){};if(jB==null)jB=new xB<kB>();j=j==null?'<unnamed>':j;var i;var h=EB.RD;if(g is PC){i=(g as PC).BG;}else if(g is Function){i=g;try {var l=g();if(l is List){h=EB.lB;}else if(l is Iterable){h=EB.lB;i=()=>g().toList();}else if((l is tB.LinkedHashMap)||(l is tB.SplayTreeMap)){h=EB.BC;}else if(l is Map){h=EB.AC;}}catch (QB,GC){iB.FC('evaluating ${j} watcher threw error (${QB}, ${GC})');}}else if(g is List){i=()=>g;h=EB.lB;}else if(g is Iterable){i=()=>g.toList();h=EB.lB;}else if((g is tB.LinkedHashMap)||(g is tB.SplayTreeMap)){i=()=>g;h=EB.BC;}else if(g is Map){i=()=>g;h=EB.AC;}if(yB&&q==null&&qB!=null){q=qB();}var aC=KD(h,i,BB,j,q);var bB=jB.add(aC);return bB.remove;} KD( l, g, j, h, i){switch (l){case EB.lB:return new WE(g,j,h,i);case EB.BC:return new YE(g,j,h,i);case EB.AC:return new XE(g,j,h,i);default:return new kB(g,j,h,i);}} LD(h, i,[ j, l]){var q=JD(h,i,j,l);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new oB(null,g));return q;}var jB;class kB{final  TC;var location;final  CG;static var MD=0;final  BG;final  DG;var EG;kB(this.BG,this.DG,this.TC,this.location):CG=MD++ {EG=BG();} toString()=>'${TC} (id: #${CG})'; mD(){var g=FG();if(GG(g)){var h=EG;HG(g);DG(new oB(h,g));return true;}return false;} GG(g)=>EG!=g; HG(g){if(yB){if(location!=null){iB.info('watcher updated: ${this}, defined at:\n${location}');location=null;}else{iB.info('watcher updated: ${this}');}}EG=g;}FG(){try {return BG();}catch (g,h){iB.FC('${this} watcher threw an exception: ${g}, ${h}');}return EG;}}final  NC=10; ND(){if(jB==null)return;var g;var h=0;do{g=false;for(var i in jB){if(i.mD()){g=true;}}}while(g&& ++h<NC);if(h==NC){iB.FC('Possible loop in watchers propagation, stopped dispatch.');}}typedef  OC<OD>();typedef  PD<OD>( value);class PC<OD>{}class WE<OD> extends kB{WE(g, j, h, i):super(g,j,h,i){HG(FG());} GG( g){return zB(EG,g);} HG(g){EG=new List<OD>.from(g);}}class XE<rB,QD> extends kB{XE(g, j, h, i):super(g,j,h,i){HG(FG());} GG( g){var i=EG.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(EG[h]!=g[h])return true;}return false;} HG(g){EG=new Map<rB,QD>.from(g);}}class YE<rB,QD> extends kB{YE(g, j, h, i):super(g,j,h,i){HG(FG());} GG( g){return zB(g.keys,EG.keys)||zB(g.values,EG.values);} HG(g){EG=new tB.LinkedHashMap.from(g);}} zB( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class EB{final IG;const EB.fE(this.IG);toString()=>'Enum.${IG}';static const lB=const EB.fE('LIST');static const AC=const EB.fE('HASH_MAP');static const BC=const EB.fE('ORDERED_MAP');static const RD=const EB.fE('OTHER');}abstract class QC implements n.Element{var JG;var KG;var LG={};var MG=new EC({}); qD( g)=>MG; BE( h,var g){MG=g;} get host{if(JG==null)throw new StateError('host element has not been set.');return JG;}set host( g){if(g==null){throw new ArgumentError('host must not be null.');}var h=g.xtag;if(h!=null&&h!=g){throw new ArgumentError('host must not have its xtag property set.');}if(JG!=null){throw new StateError('host can only be set once.');}g.xtag=this;JG=g;}createShadowRoot([ g]){var h=NG();if(g!=null){LG[g]=h;}return h;}NG(){if(RC){return host.createShadowRoot();}if(KG==null)KG=[] ;KG.add(new n.DivElement());return KG.last;} oD(){} rD(){} xD(){} nD(){if(RC)return;if(KG.length==0){throw new StateError('Distribution algorithm requires at least one shadow' ' root and can only be run once.');}var j=KG;var g=j.removeLast();var BB=g;var q=new List.from(nodes);var l=[] ;var QB=[] ;while (true){q=OG(g,q);var h=g.query('shadow');if(h!=null){if(j.length>0){g=j.removeLast();l.add(h);QB.add(g);}else{DC(h,q);break;}}else{break;}}for(int i=0;i<l.length;i++ ){var h=l[i];var g=QB[i];DC(h,g.nodes);}nodes.clear();nodes.addAll(BB.nodes);for(var bB in LG.keys){if(LG[bB]==BB){LG[bB]=this;break;}}} OG( BB, j){for(var g in BB.queryAll('content')){if(!TD(g))continue;var i=g.attributes['select'];if(i==null||i=='')i='*';var h=[] ;var q=[] ;for(var l in j){(SD(l,i)?h:q).add(l);}if(h.length==0){h=g.nodes;}DC(g,h);j=q;}return j;}static  SD( h, g){if(h is !n.Element)return g=='*';return (h as n.Element).matches(g);}static  CC( g)=>g.tagName=='CONTENT'||g.tagName=='SHADOW';static  TD( g){assert(CC(g));for(g=g.parent;g!=null;g=g.parent){if(CC(g))return false;}return true;}static  DC( g, h){assert(CC(g));g.parent.insertAllBefore(h,g);g.remove();} get nodes=>host.nodes; replaceWith( g){host.replaceWith(g);} remove()=>host.remove();set text( g){host.text=g;} contains( g)=>host.contains(g); insertBefore( g, h)=>host.insertBefore(g,h); insertAllBefore( g, h)=>host.insertAllBefore(g,h); get attributes=>host.attributes; get children=>host.children; clone( g)=>host.clone(g); get parent=>host.parent; get parentNode=>host.parentNode; get nodeValue=>host.nodeValue; get id=>host.id;set id( g){host.id=g;} set innerHtml( g){host.innerHtml=g;} get tagName=>host.tagName; matches( g)=>host.matches(g); query( g)=>host.query(g); queryAll( g)=>host.queryAll(g); get YD=>host.YD; get ZD=>host.ZD; get cD=>host.cD; aD( g)=>host.aD(g); bD( g)=>host.bD(g); fD( g)=>host.fD(g); gD( g)=>host.gD(g); kD( h, g)=>host.kD(h,g);get WD=>host.WD; get XD=>host.XD; get firstChild=>host.firstChild; get localName=>host.localName; get dD=>host.dD; get eD=>host.eD; VD( i, g,[ h]){host.VD(i,g,h);} hD( g)=>host.hD(g); iD( i, g,[ h]){host.iD(i,g,h);} jD( g, h)=>host.jD(g,h);get xtag=>host.xtag;set xtag(g){host.xtag=g;} append( g)=>host.append(g); get onChange=>host.onChange; get onClick=>host.onClick; get onInput=>host.onInput;}class EC{final  PG;EC(this.PG); operator[]( g)=>PG[g];}var UD=false; get RC=>UD&&n.ShadowRoot.supported;//@ sourceMappingURL=slambook.html_bootstrap.dart.map
