// Auto-generated from multiselect.html.
// DO NOT EDIT.

library multiselect_html;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'dart:html';
import 'package:web_ui/web_ui.dart';


// Original code


final Map<String, bool> books = toObservable(
    { 'The Cat in the Hat': true, 'War and Peace': false,
      'Pride and Prejudice': true, 'On the Road': true,
      'The Hunger Games': true, 'The Java Tutorial':  false,
      'The Joy of Cooking': false, 'Goodnight Moon': true }
);

void main() {
  window.onLoad.listen((e) {        
    // Get the OptionElements in the SelectElement.
    List<OptionElement> options = (query('#bookselector') as SelectElement).options;
    print(options.length);
    // Update the selected items in the SelectElement from the Map.
    options.forEach((o) => o.selected = books[o.value] );
  });
}
      
List<String> get booksselected {
  // Return the keys of the selected items.
  return books.keys.where((c) => books[c]).toList();
}

void changeselected(Event e) {
  // Get the selected elements.
  List<OptionElement> options = (query('#bookselector') as SelectElement).selectedOptions;
  // Set everything to false temporarily.
  books.forEach((k, v) => books[k] = false);
  // Set true for selected items.
  options.forEach((e) => books[e.value] = true);
}

// Additional generated code
void init_autogenerated() {
  var __root = autogenerated.document.body;
  final __html0 = new autogenerated.Element.html('<h4>You chose:</h4>'), __html1 = new autogenerated.Element.html('<select multiple="" id="bookselector">\n            <option style="display:none"></option>\n        </select>'), __html2 = new autogenerated.Element.html('<option template="" repeat="key in books.keys"></option>'), __html3 = new autogenerated.Element.html('<ul>\n           <li style="display:none"></li>\n        </ul>'), __html4 = new autogenerated.Element.html('<li template="" repeat="selected in booksselected"></li>');
  var __e8;
  var __t = new autogenerated.Template(__root);
  __e8 = __root.nodes[3].nodes[3];
  __t.conditional(__e8, () => !books.isEmpty, (__t) {
    var __e2, __e3, __e6, __e7;
    __e3 = __html1.clone(true);
    __e2 = __e3.nodes[1];
    __t.loop(__e2, () => books.keys, ($list, $index, __t) {
      var key = $list[$index];
      var __e1;
      __e1 = __html2.clone(true);
      var __binding0 = __t.contentBind(() => key, false);
      __e1.nodes.add(__binding0);
      __t.oneWayBind(() => key, (e) { if (__e1.value != e) __e1.value = e; }, false, false);
    __t.add(__e1);
    });
    __t.listen(__e3.onChange, ($event) { changeselected($event); });
    __e7 = __html3.clone(true);
    __e6 = __e7.nodes[1];
    __t.loop(__e6, () => booksselected, ($list, $index, __t) {
      var selected = $list[$index];
      var __e5;
      __e5 = __html4.clone(true);
      var __binding4 = __t.contentBind(() => selected, false);
      __e5.nodes.add(__binding4);
    __t.add(__e5);
    });
  __t.addAll([new autogenerated.Text('\n        \n        '),
      new autogenerated.Text('\n        '),
      __e3,
      new autogenerated.Text('\n\n        '),
      __html0.clone(true),
      new autogenerated.Text('\n        '),
      __e7,
      new autogenerated.Text('\n      ')]);
  });

  __t.create();
  __t.insert();
}

//# sourceMappingURL=multiselect.dart.map