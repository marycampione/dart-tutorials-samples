import "dart:html" as GB;import "dart:async" as jB;import "dart:collection" as tB;import "dart:isolate" as EE;class jD{static const  kD="Chrome";static const  lD="Firefox";static const  mD="Internet Explorer";static const  nD="Safari";final  cD;final  minimumVersion;const jD(this.cD,[this.minimumVersion]);}class oD{const oD();}class pD{final  name;const pD(this.name);}class qD{const qD();}class rD{const rD();}var OC='pumpernickel';var uB=OC.split("");var vB=SC(OC.replaceAll(new RegExp('.'),'-').split(""));var kB=SC(new List());final KB=new u();var wB=''; get WB{if(o){v(KB,k.n,'guessedletter');}return wB;}set WB( g){if(EB(KB)){m(KB,k.n,'guessedletter',wB,g);}wB=g;}var xB=false; get PC{if(o){v(KB,k.n,'dead');}return xB;}set PC( g){if(EB(KB)){m(KB,k.n,'dead',xB,g);}xB=g;}var yB=false; get QC{if(o){v(KB,k.n,'won');}return yB;}set QC( g){if(EB(KB)){m(KB,k.n,'won',yB,g);}yB=g;} lC(){} mC(){const  g=7;if(uB.contains(WB)){nC();if(!vB.contains('-')){QC=true;}}else{kB.add(WB);if(kB.length==g){PC=true;}}WB='';} nC(){for(int g=0;g<uB.length;g++ ){if(uB[g]==WB){vB[g]=WB;}}} oC(){var ME=GB.document.body;final NE=new GB.InputElement(),OE=new GB.Element.html('<p>\n              <template></template>\n            </p>'),PE=new GB.Element.html('<p id="wrong">\n              <template></template>\n            </p>');var QE,RE,SE,TE;var UE=new WC(ME);QE=ME.nodes[3].nodes[1];UE.loop(QE,()=>vB,(h,g,UE){var l=h[g];var VE=UE.dC(()=>l,false);UE.addAll([new GB.Text(' '),VE,new GB.Text(' ')]);});SE=ME.nodes[5].nodes[1];UE.rB(SE,()=>!PC&&!QC,(UE){var WE,XE,YE,ZE,aE;WE=NE.clone(true);UE.listen(WE.onInput,(i){WB=WE.value;});UE.listen(WE.onKeyUp,(i){i=new GB.KeyEvent(i);mC();});UE.hD(()=>WB,(j){if(WE.value!=j)WE.value=j;},false,false);YE=OE.clone(true);XE=YE.nodes[1];UE.rB(XE,()=>kB.length!=0,(UE){UE.add(new GB.Text(' Sorry! The word contains no: '));});aE=PE.clone(true);ZE=aE.nodes[1];UE.loop(ZE,()=>kB,(h,g,UE){var w=h[g];var bE=UE.dC(()=>w,false);UE.addAll([new GB.Text(' '),bE,new GB.Text(' ')]);});UE.addAll([new GB.Text('\n            Guess a letter...\n            '),WE,new GB.Text('\n            '),YE,new GB.Text('\n            '),aE,new GB.Text('\n          ')]);});TE=ME.nodes[5].nodes[3];UE.rB(TE,()=>PC,(UE){UE.add(new GB.Text(' You\'re dead! '));});RE=ME.nodes[5].nodes[5];UE.rB(RE,()=>QC,(UE){UE.add(new GB.Text(' You Win! '));});UE.gB();UE.insert();}main(){YC=true;MB.AC.gD.listen((g){print('${g.hB.name.toLowerCase()}: ${g.message}');});lC();oC();}var zB=false;var pC=s.RC;class MB{final  name; get gC=>(parent==null||parent.name=='')?name:'${parent.gC}.${name}';final  parent;var cE;var children;var dE;var eE;factory MB( g){if(g.startsWith('.')){throw new ArgumentError("name shouldn't start with a '.'");}if(XB==null)XB=<String,MB>{};if(XB.containsKey(g))return XB[g];var j=g.lastIndexOf('.');var h=null;var i;if(j==-1){if(g!='')h=new MB('');i=g;}else{h=new MB(g.substring(0,j));i=g.substring(j+1);}final l=new MB.FE(i,h);XB[g]=l;return l;}MB.FE(this.name,this.parent):children=new Map<String,MB>(){if(parent!=null)parent.children[name]=this;} get hB{if(zB){if(cE!=null)return cE;if(parent!=null)return parent.hB;}return pC;} get gD=>fE(); eD( g)=>(g>=hB); log( i, l,[j]){if(eD(i)){var h=new YB(i,l,gC,j);if(zB){var g=this;while (g!=null){g.gE(h);g=g.parent;}}else{AC.gE(h);}}} info( h,[g])=>log(s.RC,h,g); LC( h,[g])=>log(s.qC,h,g); fE(){if(zB||parent==null){if(dE==null){dE=new jB.StreamController<YB>.broadcast(sync:true);eE=dE.stream;}return eE;}else{return AC.fE();}} gE( g){if(dE!=null){dE.add(g);}}static  get AC=>new MB('');static var XB;}class s implements Comparable<s>{final  name;final  value;const s(this.name,this.value);static const  RC=const s('INFO',800);static const  qC=const s('WARNING',900); operator==( g)=>g!=null&&value==g.value; operator<( g)=>value<g.value; operator<=( g)=>value<=g.value; operator>( g)=>value>g.value; operator>=( g)=>value>=g.value; compareTo( g)=>value-g.value; get hashCode=>value; toString()=>name;}class YB{final  hB;final  message;final  fD;final  time;final  iD;static var rC=0;var exception;YB(this.hB,this.message,this.fD,[this.exception]):time=new DateTime.now(),iD=YB.rC++ ;}class sD<NB> extends MD with u implements List<NB>{final  hE;sD([ g]):hE=g!=null?new List<NB>(g):<NB>[] ;factory sD.GE( g)=>new sD<NB>()..addAll(g); get length{if(o)v(this,k.n,'length');return hE.length;}set length( h){var i=hE.length;if(i==h)return;if(EB(this)){if(h<i){for(int g=i-1;g>=h;g-- ){m(this,k.PB,g,hE[g],null);}m(this,k.n,'length',i,h);}else{m(this,k.n,'length',i,h);for(int g=i;g<h;g++ ){m(this,k.OB,g,null,null);}}}hE.length=h;} operator[]( g){if(o)v(this,k.DB,g);return hE[g];}operator[]=( g, h){var i=hE[g];if(EB(this)){m(this,k.DB,g,i,h);}hE[g]=h;} add( h){var g=hE.length;if(EB(this)){m(this,k.n,'length',g,g+1);m(this,k.OB,g,null,h);}hE.add(h);} toString(){if(o){for(int g=0;g<length;g++ ){v(this,k.DB,g);}}return hE.toString();}}typedef  ZB<t,q>();class SB<t,q> extends u implements Map<t,q>{final  iE;var jE;var kE;SB({ createMap}):iE=createMap!=null?createMap():new Map<t,q>(){jE=new sC<t,q>(this);kE=new tC<t,q>(this);}factory SB.HE( i,{ createMap}){var g=new SB<t,q>(createMap:createMap);i.forEach(( h, j){g[h]=j;});return g;} get keys=>jE; get values=>kE; get length{if(o)v(this,k.n,'length');return iE.length;} get isEmpty=>length==0; get isNotEmpty=>length!=0; lE( g)=>v(this,k.DB,g); mE(){v(this,k.n,'length');iE.keys.forEach(lE);} containsKey( g){if(o)lE(g);return iE.containsKey(g);} operator[]( g){if(o)lE(g);return iE[g];} operator[]=( h, g){var j=iE.length;var i=iE[h];iE[h]=g;if(EB(this)){if(j!=iE.length){m(this,k.n,'length',j,iE.length);m(this,k.OB,h,i,g);}else if(i!=g){m(this,k.DB,h,i,g);}}} putIfAbsent( g, j()){if(o)lE(g);var h=iE.length;var i=iE.putIfAbsent(g,j);if(EB(this)&&h!=iE.length){m(this,k.n,'length',h,iE.length);m(this,k.OB,g,null,i);}return i;} remove( g){if(o)lE(g);var h=iE.length;var i=iE.remove(g);if(EB(this)&&h!=iE.length){m(this,k.PB,g,i,null);m(this,k.n,'length',h,iE.length);}return i;} addAll( h)=>h.forEach((g,i){this[g]=i;}); clear(){var g=iE.length;if(EB(this)&&g>0){iE.forEach((i,h){m(this,k.PB,i,h,null);});m(this,k.n,'length',g,0);}iE.clear();} forEach( g( key, value)){if(o)mE();iE.forEach(g);} toString()=>tB.Maps.mapToString(this);}class sC<t,q> extends tB.IterableBase<t>{final  iE;sC(this.iE); get iterator=>new tD<t,q>(iE);}class tD<t,q> implements Iterator<t>{final  iE;final  jE;var nE=false;tD( g):iE=g,jE=g.iE.keys.iterator; moveNext(){if(o)v(iE,k.n,'length');return nE=jE.moveNext();} get current{var g=jE.current;if(o&&nE)iE.lE(g);return g;}}class tC<t,q> extends tB.IterableBase<q>{final  iE;tC(this.iE); get iterator=>new uD<t,q>(iE);}class uD<t,q> implements Iterator<q>{final  iE;final  jE;final  kE;var nE;uD( g):iE=g,jE=g.iE.keys.iterator,kE=g.iE.values.iterator; moveNext(){if(o)v(iE,k.n,'length');var h=jE.moveNext();var g=kE.moveNext();if(h!=g){throw new StateError('keys and values should be the same length');}return nE=g;} get current{if(o&&nE)iE.lE(jE.current);return kE.current;}}typedef  IB( e);typedef  uC( changes);typedef  JB();typedef  vC();class lB{final oldValue;final newValue;final  changes;lB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is lB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>ID(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class k{static const n=1;static const DB=2;static const OB=DB|4;static const PB=DB|8;final  type;final key;final oldValue;final newValue;k(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is k&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>JD(type,key,oldValue,newValue); toString(){var g;switch (type){case n:g='field';break;case DB:g='index';break;case OB:g='insert';break;case PB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} wC(g, i,[ l]){if(g is u){var h=g;return BC(h,(w){i(new lB(h,h,w));});}var j=new mB(g,i,l);if(!j.oE()){return yC;}return j.pE;} BC( g, i){if(g.VB==null)g.VB=new CC();var h=g.VB.add(i);return h.remove;}SC(g){if(g is Map){var h=null;if(g is tB.SplayTreeMap){h=()=>new tB.SplayTreeMap();}else if(g is tB.LinkedHashMap){h=()=>new tB.LinkedHashMap();}return new SB.HE(g,createMap:h);}if(g is Set)return new UC.IE(g);if(g is Iterable)return new sD.GE(g);return g;}class u{var VB;var UB;final  hashCode= ++u.xC;static var xC=0;} EB( g)=>g.VB!=null&&g.VB.head!=null; get o=>TB!=null; v( g, h,i)=>TB.qE(g,h,i); m( g, j,l, h, i){if((j&(k.OB|k.PB))==0){if(h==i)return;}if(QB==null){QB=[] ;KD(zC);}if(g.UB==null){g.UB=[] ;QB.add(g);}g.UB.add(new k(j,l,h,i));} yC(){}var TB;var TC=100;var QB;var RB; zC(){var w=0;while (QB!=null||RB!=null){var j=QB;QB=null;var i=RB;RB=null;if(w++ ==TC){AD(j,i);return;}if(j!=null){for(var h in j){var iB=h.UB;h.UB=null;for(var g=h.VB.head;g!=null;g=g.next){var l=g.value;try {l(iB);}catch (NC,LB){aB(NC,LB,l,'from ${h}');}}}}if(i!=null){i.forEach((kC,MC){MC.rE();});}}} AD( l, j){var g=[] ;if(l!=null){for(var i in l){var iB=i.UB;g.add('${i} ${iB}');}}if(j!=null){for(var w in j.values){var h=w.rE();if(h!=null)g.add('${w} ${h}');}}QB=null;RB=null;var LB='exceeded notifiction limit of ${TC}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';DD(LB);}class mB{static var BD=0;final  sE= ++mB.BD;final  tE;final  uE;final  vE;final  wE=new Map();final  xE=[] ;var yE=false;var zE;mB(this.tE,this.uE,this.vE); toString()=>vE!=null?'<observer ${sE}: ${vE}>':'<observer ${sE}>'; oE(){var h=TB;TB=this;try {zE=tE();if(zE is Iterable&&zE is !List&&zE is !u){zE=(zE as Iterable).toList();}}catch (g,i){aB(g,i,tE,'from ${this}');zE=null;}wE.forEach(AF);wE.clear();assert(TB==this);TB=h;BF();return xE.length>0;} CF( i){try {uE(i);}catch (g,h){aB(g,h,uE,'from ${this}');}} BF(){var g=zE;if(g is !u)return;xE.add(BC(g,(h){CF(new lB(g,g,h));}));} qE( w, LB,g){var i=wE.putIfAbsent(w,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|LB;}catch (j,l){aB(j,l,g,'hashCode or operator == from ${this}');}} AF( i, j){xE.add(BC(i,(l){if(yE)return;for(var g in l){var h=j[g.key];if(h!=null&&(h&g.type)!=0){yE=true;if(RB==null){RB=new tB.SplayTreeMap();}RB[sE]=this;return;}}}));} pE(){for(var g in xE){g();}yE=false;} rE(){if(!yE)return null;var g=zE;pE();oE();try {if(g==zE)return null;}catch (i,j){aB(i,j,g,'operator == from ${this}');return null;}var h=new lB(g,zE);CF(h);return h;}}typedef  CD( message);var DD=(g)=>print(g);typedef  ED(error,stackTrace,obj, message);var aB=FD; FD(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class UC<FB> extends LD with u implements Set<FB>{final  DF;final  EF;UC({ createMap}):DF=createMap!=null?createMap():new Map<FB,Object>(),EF=createMap;factory UC.IE( g,{ createMap}){return new UC<FB>(createMap:createMap)..addAll(g);} contains( g){if(o)v(this,k.DB,g);return DF.containsKey(g);} add( g){var h=DF.length;DF[g]=const Object();if(h!=DF.length){m(this,k.n,'length',h,DF.length);m(this,k.OB,g,null,g);}} remove( g){if(o)v(this,k.DB,g);var h=DF.length;DF.remove(g);if(h!=DF.length){if(EB(this)){m(this,k.PB,g,g,null);m(this,k.n,'length',h,DF.length);}return true;}return false;} clear(){if(EB(this)){for(var g in DF.keys){m(this,k.PB,g,g,null);}m(this,k.n,'length',DF.length,0);}DF.clear();} get length{if(o)v(this,k.n,'length');return DF.length;} get isEmpty=>length==0; get iterator=>new vD<FB>(this); addAll( g)=>g.forEach(add); toString(){if(o){for(FB g in DF.keys){v(this,k.DB,g);}}return DF.keys.toSet().toString();}}class vD<FB> implements Iterator<FB>{final  FF;final  GF;var HF=false;vD( g):FF=g,GF=g.DF.keys.iterator; moveNext(){FF.length;return HF=GF.moveNext();} get current{var g=GF.current;if(o&&HF)v(FF,k.DB,g);return g;}}class GD{}class HD{}class BB<CB>{var IF;var JF;var KF;var LF;BB.JE( g,this.KF):LF=g{if(KF!=null)KF.MF++ ;} get next=>JF; get value=>LF;set value( g)=>LF=g; NF( g, h){JF=h;IF=g;if(g!=null)g.JF=this;if(h!=null)h.IF=this;return this;} append( g)=>new BB<CB>.JE(g,KF).NF(this,JF); remove(){if(KF==null)return;KF.MF-- ;if(IF!=null){IF.JF=JF;}else{KF.OF=JF;}if(JF!=null){JF.IF=IF;}else{KF.PF=IF;}JF=null;IF=null;KF=null;}}class CC<CB> extends tB.IterableBase<CB>{var OF;var PF; get length=>MF;var MF=0;CC(){} get head=>OF; add( h){var g=new BB<CB>.JE(h,this);if(PF==null)return OF=PF=g;return PF=g.NF(PF,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new wD<CB>(this);}class wD<CB> implements Iterator<CB>{var QF;var KF;var RF;var SF=-1;wD(this.KF){QF=new List<BB>(KF.length);var h=0;var g=KF.head;while (g!=null){QF[h++ ]=g;g=g.next;}} get current=>RF; moveNext(){do{SF++ ;}while(SF<QF.length&&QF[SF].KF!=KF);if(SF<QF.length){RF=QF[SF].value;return true;}else{RF=null;return false;}}}bB(h,g)=>h.hashCode*31+g.hashCode;ID(h,g,i)=>bB(bB(h,g),i);JD(g,i,h,j)=>bB(bB(g,i),bB(h,j)); KD( h()){var g=new EE.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);}abstract class LD extends tB.IterableBase<dynamic>{}abstract class MD extends tB.ListMixin<dynamic>{} ND(i, g,[ h]){var j=i is GD;if(h==null){h=i.toString();}if(!j&&g is GB.Text){g.text=h;}else{var l=g;g=j?new GB.Element.html(h):new GB.Text(h);l.replaceWith(g);}return g;} OD(g){if(g is HD)return g.toString();g=g.toString();return QD(g)?g:'#';}const PD=const["http","https","ftp","mailto"]; QD( h){var g=Uri.parse(h).scheme;if(g=='')return true;return PD.contains(g.toLowerCase())||"MAILTO"==g.toUpperCase();}abstract class nB{ gB(){} insert(); remove();}class xD extends nB{final  fC;var TF;final  listener;xD(this.fC,this.listener); insert(){TF=fC.listen(listener);} remove(){TF.cancel();TF=null;}}abstract class VC extends nB{final exp;final  isFinal;final  HC;var HB;VC(this.exp,this.isFinal):HC=DC&&oB!=null?oB():null; insert(){if(isFinal){IC();}else if(HB!=null){throw new StateError('binding already attached');}else{HB=KC();}} remove(){if(!isFinal){HB();HB=null;}} IC(); KC();}class yD extends VC{final  action;yD(g,this.action, h):super(g,h); IC()=>action(new lB(null,exp())); KC()=>pB(exp,action,'generic-binding',HC);}class zD extends VC{final  jC;final  hC;zD( g,this.jC,this.hC, h):super(g,h); UF(g){jC(hC?OD(g):g);} IC()=>UF(exp()); KC()=>pB(exp,(g)=>UF(g.newValue),'dom-property-binding',HC);}class WC extends nB{final  JC;final  children=[] ;final  nodes=[] ;WC(this.JC); listen( i, h){children.add(new xD(i,(g){h(g);XD();}));} dC( h,i){var g=new GB.Text('');children.add(new yD(()=>'${h()}',(j){g=ND(h(),g,j.newValue);},i));return g;} hD(g,j,h,[i=false]){children.add(new zD(g,j,i,h));} rB( h,g,i){children.add(new SD(h,g,i));} loop( h,g,i){children.add(new AE(h,g,i));} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); gB(){for(var g=0,h=children.length;g<h;g++ ){children[g].gB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}abstract class XC extends WC{final exp;var HB;XC( g,this.exp):super(g); gB(){} insert(){super.gB();if(nodes.length>0){var i=JC.parentNode;var j=JC.nextNode;for(var g=0,h=nodes.length;g<h;g++ ){i.insertBefore(nodes[g],j);}}super.insert();} remove(){super.remove();for(var g=nodes.length-1;g>=0;g-- ){nodes[g].remove();}nodes.clear();}}typedef  RD( template);class SD extends XC{var sB=false;final  cC;SD( h,g,this.cC):super(h,g); insert(){HB=pB(exp,(g){if(!sB&&g.newValue){cC(this);super.insert();sB=true;}else if(sB&&!g.newValue){super.remove();sB=false;}},'conditional-binding');} remove(){super.remove();HB();HB=null;}}typedef  TD( list, index, template);class AE extends XC{final  iC;AE( h,g,this.iC):super(h,g); insert(){HB=pB(exp,(i){super.remove();var h=i.newValue;for(int g=0;g<h.length;g++ ){iC(h,g,this);}super.insert();},'loop-binding');} remove(){super.remove();HB();HB=null;}}var YC=false;var DC=false;var oB=(){try {throw "";}catch (h,g){return g.toString();}};final  cB=new MB('watcher'); UD(g, LB,[ j, w]){if(YC)return wC(g,LB);if(LB==null)return (){};if(dB==null)dB=new CC<eB>();j=j==null?'<unnamed>':j;var i;var h=AB.bD;if(g is bC){i=(g as bC).VF;}else if(g is Function){i=g;try {var l=g();if(l is List){h=AB.fB;}else if(l is Iterable){h=AB.fB;i=()=>g().toList();}else if((l is tB.LinkedHashMap)||(l is tB.SplayTreeMap)){h=AB.GC;}else if(l is Map){h=AB.FC;}}catch (iB,MC){cB.LC('evaluating ${j} watcher threw error (${iB}, ${MC})');}}else if(g is List){i=()=>g;h=AB.fB;}else if(g is Iterable){i=()=>g.toList();h=AB.fB;}else if((g is tB.LinkedHashMap)||(g is tB.SplayTreeMap)){i=()=>g;h=AB.GC;}else if(g is Map){i=()=>g;h=AB.FC;}if(DC&&w==null&&oB!=null){w=oB();}var kC=VD(h,i,LB,j,w);var NC=dB.add(kC);return NC.remove;} VD( l, g, j, h, i){switch (l){case AB.fB:return new BE(g,j,h,i);case AB.GC:return new DE(g,j,h,i);case AB.FC:return new CE(g,j,h,i);default:return new eB(g,j,h,i);}} pB(h, i,[ j, l]){var w=UD(h,i,j,l);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new lB(null,g));return w;}var dB;class eB{final  eC;var location;final  WF;static var WD=0;final  VF;final  XF;var YF;eB(this.VF,this.XF,this.eC,this.location):WF=WD++ {YF=VF();} toString()=>'${eC} (id: #${WF})'; dD(){var g=ZF();if(aF(g)){var h=YF;bF(g);XF(new lB(h,g));return true;}return false;} aF(g)=>YF!=g; bF(g){if(DC){if(location!=null){cB.info('watcher updated: ${this}, defined at:\n${location}');location=null;}else{cB.info('watcher updated: ${this}');}}YF=g;}ZF(){try {return VF();}catch (g,h){cB.LC('${this} watcher threw an exception: ${g}, ${h}');}return YF;}}final  ZC=10; XD(){if(dB==null)return;var g;var h=0;do{g=false;for(var i in dB){if(i.dD()){g=true;}}}while(g&& ++h<ZC);if(h==ZC){cB.LC('Possible loop in watchers propagation, stopped dispatch.');}}typedef  aC<YD>();typedef  ZD<YD>( value);class bC<YD>{}class BE<YD> extends eB{BE(g, j, h, i):super(g,j,h,i){bF(ZF());} aF( g){return EC(YF,g);} bF(g){YF=new List<YD>.from(g);}}class CE<qB,aD> extends eB{CE(g, j, h, i):super(g,j,h,i){bF(ZF());} aF( g){var i=YF.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(YF[h]!=g[h])return true;}return false;} bF(g){YF=new Map<qB,aD>.from(g);}}class DE<qB,aD> extends eB{DE(g, j, h, i):super(g,j,h,i){bF(ZF());} aF( g){return EC(g.keys,YF.keys)||EC(g.values,YF.values);} bF(g){YF=new tB.LinkedHashMap.from(g);}} EC( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class AB{final cF;const AB.KE(this.cF);toString()=>'Enum.${cF}';static const fB=const AB.KE('LIST');static const FC=const AB.KE('HASH_MAP');static const GC=const AB.KE('ORDERED_MAP');static const bD=const AB.KE('OTHER');}//@ sourceMappingURL=simplehangman.html_bootstrap.dart.map
