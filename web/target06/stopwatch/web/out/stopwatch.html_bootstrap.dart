import "dart:html" as DB;import "dart:async" as SB;import "dart:collection" as sB;import "dart:isolate" as RD;class ED{static const  FD="Chrome";final  wC;final  minimumVersion;const ED(this.wC,[this.minimumVersion]);}class GD{const GD();}class HD{final  name;const HD(this.name);}class ID{const ID();}class JD{const JD();}final bB=new m();var cB='00:00'; get tB{if(WC){XC(bB,AB.gB,'counter');}return cB;}set tB( g){if(VC(bB)){YC(bB,AB.gB,'counter',cB,g);}cB=g;}var TB=new Stopwatch();var UB;var dB;var HB; IC(){dB=DB.query("#startbutton");UB=DB.query("#stopbutton");UB.disabled=true;HB=DB.query("#resetbutton");HB.disabled=true;} JC(){TB.start();var g=new Duration(seconds:1);new SB.Timer.periodic(g,MC);dB.disabled=true;UB.disabled=false;HB.disabled=true;} KC(){TB.stop();dB.disabled=false;HB.disabled=false;UB.disabled=true;} LC(){TB.reset();tB='00:00';HB.disabled=true;} MC( WD){var g=TB.elapsedMilliseconds~/1000;var h=0;if(g>=60){h=g~/60;g=g%60;}var i=(h<=9)?'0${h}':'${h}';var j=(g<=9)?'0${g}':'${g}';tB='${i}:${j}';} NC(){var XD=DB.document.body;var YD,ZD,aD,bD;var cD=new ND(XD);YD=XD.nodes[3].nodes[1];var dD=cD.yC(()=>tB,false);YD.nodes.addAll([new DB.Text('\n      '),dD,new DB.Text('\n      ')]);ZD=XD.nodes[3].nodes[3].nodes[1];cD.listen(ZD.onClick,(g){JC();});aD=XD.nodes[3].nodes[3].nodes[3];cD.listen(aD.onClick,(g){KC();});bD=XD.nodes[3].nodes[3].nodes[5];cD.listen(bD.onClick,(g){LC();});cD.oB();cD.insert();}main(){yB=true;v.fB.CD.listen((g){print('${g.QB.name.toLowerCase()}: ${g.message}');});IC();NC();}var eB=false;var OC=l.uB;class v{final  name; get EC=>(parent==null||parent.name=='')?name:'${parent.EC}.${name}';final  parent;var eD;var children;var fD;var gD;factory v( g){if(g.startsWith('.')){throw new ArgumentError("name shouldn't start with a '.'");}if(IB==null)IB=<String,v>{};if(IB.containsKey(g))return IB[g];var j=g.lastIndexOf('.');var h=null;var i;if(j==-1){if(g!='')h=new v('');i=g;}else{h=new v(g.substring(0,j));i=g.substring(j+1);}final k=new v.SD(i,h);IB[g]=k;return k;}v.SD(this.name,this.parent):children=new Map<String,v>(){if(parent!=null)parent.children[name]=this;} get QB{if(eB){if(eD!=null)return eD;if(parent!=null)return parent.QB;}return OC;} get CD=>hD(); zC( g)=>(g>=QB); log( i, k,[j]){if(zC(i)){var h=new JB(i,k,EC,j);if(eB){var g=this;while (g!=null){g.iD(h);g=g.parent;}}else{fB.iD(h);}}} info( h,[g])=>log(l.uB,h,g); pB( h,[g])=>log(l.PC,h,g); hD(){if(eB||parent==null){if(fD==null){fD=new SB.StreamController<JB>.broadcast(sync:true);gD=fD.stream;}return gD;}else{return fB.hD();}} iD( g){if(fD!=null){fD.add(g);}}static  get fB=>new v('');static var IB;}class l implements Comparable<l>{final  name;final  value;const l(this.name,this.value);static const  uB=const l('INFO',800);static const  PC=const l('WARNING',900); operator==( g)=>g!=null&&value==g.value; operator<( g)=>value<g.value; operator<=( g)=>value<=g.value; operator>( g)=>value>g.value; operator>=( g)=>value>=g.value; compareTo( g)=>value-g.value; get hashCode=>value; toString()=>name;}class JB{final  QB;final  message;final  AD;final  time;final  DD;static var QC=0;var exception;JB(this.QB,this.message,this.AD,[this.exception]):time=new DateTime.now(),DD=JB.QC++ ;}typedef  t( e);typedef  RC( changes);typedef  w();typedef  SC();class VB{final oldValue;final newValue;final  changes;VB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is VB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>iC(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class AB{static const gB=1;static const hB=2;static const vB=hB|4;static const wB=hB|8;final  type;final key;final oldValue;final newValue;AB(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is AB&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>jC(type,key,oldValue,newValue); toString(){var g;switch (type){case gB:g='field';break;case hB:g='index';break;case vB:g='insert';break;case wB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} TC(g, i,[ k]){if(g is m){var h=g;return iB(h,(o){i(new VB(h,h,o));});}var j=new WB(g,i,k);if(!j.jD()){return ZC;}return j.kD;} iB( g, i){if(g.GB==null)g.GB=new jB();var h=g.GB.add(i);return h.remove;}class m{var GB;var FB;final  hashCode= ++m.UC;static var UC=0;} VC( g)=>g.GB!=null&&g.GB.head!=null; get WC=>EB!=null; XC( g, h,i)=>EB.lD(g,h,i); YC( g, j,k, h, i){if((j&(AB.vB|AB.wB))==0){if(h==i)return;}if(BB==null){BB=[] ;kC(aC);}if(g.FB==null){g.FB=[] ;BB.add(g);}g.FB.add(new AB(j,k,h,i));} ZC(){}var EB;var xB=100;var BB;var CB; aC(){var o=0;while (BB!=null||CB!=null){var j=BB;BB=null;var i=CB;CB=null;if(o++ ==xB){bC(j,i);return;}if(j!=null){for(var h in j){var RB=h.FB;h.FB=null;for(var g=h.GB.head;g!=null;g=g.next){var k=g.value;try {k(RB);}catch (rB,u){KB(rB,u,k,'from ${h}');}}}}if(i!=null){i.forEach((HC,qB){qB.mD();});}}} bC( k, j){var g=[] ;if(k!=null){for(var i in k){var RB=i.FB;g.add('${i} ${RB}');}}if(j!=null){for(var o in j.values){var h=o.mD();if(h!=null)g.add('${o} ${h}');}}BB=null;CB=null;var u='exceeded notifiction limit of ${xB}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';eC(u);}class WB{static var cC=0;final  nD= ++WB.cC;final  oD;final  pD;final  qD;final  rD=new Map();final  sD=[] ;var tD=false;var uD;WB(this.oD,this.pD,this.qD); toString()=>qD!=null?'<observer ${nD}: ${qD}>':'<observer ${nD}>'; jD(){var h=EB;EB=this;try {uD=oD();if(uD is Iterable&&uD is !List&&uD is !m){uD=(uD as Iterable).toList();}}catch (g,i){KB(g,i,oD,'from ${this}');uD=null;}rD.forEach(vD);rD.clear();assert(EB==this);EB=h;wD();return sD.length>0;} xD( i){try {pD(i);}catch (g,h){KB(g,h,pD,'from ${this}');}} wD(){var g=uD;if(g is !m)return;sD.add(iB(g,(h){xD(new VB(g,g,h));}));} lD( o, u,g){var i=rD.putIfAbsent(o,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|u;}catch (j,k){KB(j,k,g,'hashCode or operator == from ${this}');}} vD( i, j){sD.add(iB(i,(k){if(tD)return;for(var g in k){var h=j[g.key];if(h!=null&&(h&g.type)!=0){tD=true;if(CB==null){CB=new sB.SplayTreeMap();}CB[nD]=this;return;}}}));} kD(){for(var g in sD){g();}tD=false;} mD(){if(!tD)return null;var g=uD;kD();jD();try {if(g==uD)return null;}catch (i,j){KB(i,j,g,'operator == from ${this}');return null;}var h=new VB(g,uD);xD(h);return h;}}typedef  dC( message);var eC=(g)=>print(g);typedef  fC(error,stackTrace,obj, message);var KB=gC; gC(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class hC{}class q<s>{var yD;var zD;var AE;var BE;q.TD( g,this.AE):BE=g{if(AE!=null)AE.CE++ ;} get next=>zD; get value=>BE;set value( g)=>BE=g; DE( g, h){zD=h;yD=g;if(g!=null)g.zD=this;if(h!=null)h.yD=this;return this;} append( g)=>new q<s>.TD(g,AE).DE(this,zD); remove(){if(AE==null)return;AE.CE-- ;if(yD!=null){yD.zD=zD;}else{AE.EE=zD;}if(zD!=null){zD.yD=yD;}else{AE.FE=yD;}zD=null;yD=null;AE=null;}}class jB<s> extends sB.IterableBase<s>{var EE;var FE; get length=>CE;var CE=0;jB(){} get head=>EE; add( h){var g=new q<s>.TD(h,this);if(FE==null)return EE=FE=g;return FE=g.DE(FE,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new KD<s>(this);}class KD<s> implements Iterator<s>{var GE;var AE;var HE;var IE=-1;KD(this.AE){GE=new List<q>(AE.length);var h=0;var g=AE.head;while (g!=null){GE[h++ ]=g;g=g.next;}} get current=>HE; moveNext(){do{IE++ ;}while(IE<GE.length&&GE[IE].AE!=AE);if(IE<GE.length){HE=GE[IE].value;return true;}else{HE=null;return false;}}}LB(h,g)=>h.hashCode*31+g.hashCode;iC(h,g,i)=>LB(LB(h,g),i);jC(g,i,h,j)=>LB(LB(g,i),LB(h,j)); kC( h()){var g=new RD.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);} lC(i, g,[ h]){var j=i is hC;if(h==null){h=i.toString();}if(!j&&g is DB.Text){g.text=h;}else{var k=g;g=j?new DB.Element.html(h):new DB.Text(h);k.replaceWith(g);}return g;}abstract class XB{ oB(){} insert(); remove();}class LD extends XB{final  DC;var JE;final  listener;LD(this.DC,this.listener); insert(){JE=DC.listen(listener);} remove(){JE.cancel();JE=null;}}abstract class mC extends XB{final exp;final  isFinal;final  BC;var aB;mC(this.exp,this.isFinal):BC=kB&&YB!=null?YB():null; insert(){if(isFinal){FC();}else if(aB!=null){throw new StateError('binding already attached');}else{aB=GC();}} remove(){if(!isFinal){aB();aB=null;}} FC(); GC();}class MD extends mC{final  action;MD(g,this.action, h):super(g,h); FC()=>action(new VB(null,exp())); GC()=>pC(exp,action,'generic-binding',BC);}class ND extends XB{final  BD;final  children=[] ;final  nodes=[] ;ND(this.BD); listen( i, h){children.add(new LD(i,(g){h(g);rC();}));} yC( h,i){var g=new DB.Text('');children.add(new MD(()=>'${h()}',(j){g=lC(h(),g,j.newValue);},i));return g;} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); oB(){for(var g=0,h=children.length;g<h;g++ ){children[g].oB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}var yB=false;var kB=false;var YB=(){try {throw "";}catch (h,g){return g.toString();}};final  MB=new v('watcher'); nC(g, u,[ j, o]){if(yB)return TC(g,u);if(u==null)return (){};if(NB==null)NB=new jB<OB>();j=j==null?'<unnamed>':j;var i;var h=n.vC;if(g is AC){i=(g as AC).KE;}else if(g is Function){i=g;try {var k=g();if(k is List){h=n.PB;}else if(k is Iterable){h=n.PB;i=()=>g().toList();}else if((k is sB.LinkedHashMap)||(k is sB.SplayTreeMap)){h=n.nB;}else if(k is Map){h=n.mB;}}catch (RB,qB){MB.pB('evaluating ${j} watcher threw error (${RB}, ${qB})');}}else if(g is List){i=()=>g;h=n.PB;}else if(g is Iterable){i=()=>g.toList();h=n.PB;}else if((g is sB.LinkedHashMap)||(g is sB.SplayTreeMap)){i=()=>g;h=n.nB;}else if(g is Map){i=()=>g;h=n.mB;}if(kB&&o==null&&YB!=null){o=YB();}var HC=oC(h,i,u,j,o);var rB=NB.add(HC);return rB.remove;} oC( k, g, j, h, i){switch (k){case n.PB:return new OD(g,j,h,i);case n.nB:return new QD(g,j,h,i);case n.mB:return new PD(g,j,h,i);default:return new OB(g,j,h,i);}} pC(h, i,[ j, k]){var o=nC(h,i,j,k);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new VB(null,g));return o;}var NB;class OB{final  CC;var location;final  LE;static var qC=0;final  KE;final  ME;var NE;OB(this.KE,this.ME,this.CC,this.location):LE=qC++ {NE=KE();} toString()=>'${CC} (id: #${LE})'; xC(){var g=OE();if(PE(g)){var h=NE;QE(g);ME(new VB(h,g));return true;}return false;} PE(g)=>NE!=g; QE(g){if(kB){if(location!=null){MB.info('watcher updated: ${this}, defined at:\n${location}');location=null;}else{MB.info('watcher updated: ${this}');}}NE=g;}OE(){try {return KE();}catch (g,h){MB.pB('${this} watcher threw an exception: ${g}, ${h}');}return NE;}}final  zB=10; rC(){if(NB==null)return;var g;var h=0;do{g=false;for(var i in NB){if(i.xC()){g=true;}}}while(g&& ++h<zB);if(h==zB){MB.pB('Possible loop in watchers propagation, stopped dispatch.');}}typedef  sC<tC>();class AC<tC>{}class OD<tC> extends OB{OD(g, j, h, i):super(g,j,h,i){QE(OE());} PE( g){return lB(NE,g);} QE(g){NE=new List<tC>.from(g);}}class PD<ZB,uC> extends OB{PD(g, j, h, i):super(g,j,h,i){QE(OE());} PE( g){var i=NE.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(NE[h]!=g[h])return true;}return false;} QE(g){NE=new Map<ZB,uC>.from(g);}}class QD<ZB,uC> extends OB{QD(g, j, h, i):super(g,j,h,i){QE(OE());} PE( g){return lB(g.keys,NE.keys)||lB(g.values,NE.values);} QE(g){NE=new sB.LinkedHashMap.from(g);}} lB( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class n{final RE;const n.UD(this.RE);toString()=>'Enum.${RE}';static const PB=const n.UD('LIST');static const mB=const n.UD('HASH_MAP');static const nB=const n.UD('ORDERED_MAP');static const vC=const n.UD('OTHER');}//@ sourceMappingURL=stopwatch.html_bootstrap.dart.map
