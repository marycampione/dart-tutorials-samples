import "dart:html" as EB;import "dart:async" as SB;import "dart:collection" as tB;import "dart:isolate" as UD;class GD{static const  HD="Chrome";final  yC;final  minimumVersion;const GD(this.yC,[this.minimumVersion]);}class ID{const ID();}class JD{final  name;const JD(this.name);}class KD{const KD();}class LD{const LD();}final aB=new m();var bB=''; get w{if(WC){XC(aB,BB.eB,'shoutThis');}return bB;}set w( g){if(VC(aB)){YC(aB,BB.eB,'shoutThis',bB,g);}bB=g;} KC(){} get LC=>w.toUpperCase(); get MC=>w+w.split('').reversed.join(); NC(){var ZD=EB.document.body;var aD,bD,cD,dD,eD;var fD=new QD(ZD);aD=ZD.nodes[3];fD.listen(aD.onInput,(h){w=aD.value;});fD.ED(()=>w,(g){if(aD.value!=g)aD.value=g;},false,false);bD=ZD.nodes[5];var gD=fD.YB(()=>w.length,false);bD.nodes.addAll([new EB.Text('      Length: '),gD,new EB.Text(' ')]);cD=ZD.nodes[7];var hD=fD.YB(()=>LC,false);cD.nodes.addAll([new EB.Text('     Shouted: '),hD,new EB.Text(' ')]);dD=ZD.nodes[9];var iD=fD.YB(()=>(w.length>=6)?w.substring(1,5):w.substring(0,0),false);dD.nodes.addAll([new EB.Text('   Substring: '),iD,new EB.Text(' ')]);eD=ZD.nodes[11];var jD=fD.YB(()=>MC,false);eD.nodes.addAll([new EB.Text(' Palindromic: '),jD,new EB.Text(' ')]);fD.mB();fD.insert();}main(){zB=true;AB.dB.DD.listen((g){print('${g.QB.name.toLowerCase()}: ${g.message}');});KC();NC();}var cB=false;var OC=l.uB;class AB{final  name; get GC=>(parent==null||parent.name=='')?name:'${parent.GC}.${name}';final  parent;var kD;var children;var lD;var mD;factory AB( g){if(g.startsWith('.')){throw new ArgumentError("name shouldn't start with a '.'");}if(IB==null)IB=<String,AB>{};if(IB.containsKey(g))return IB[g];var j=g.lastIndexOf('.');var h=null;var i;if(j==-1){if(g!='')h=new AB('');i=g;}else{h=new AB(g.substring(0,j));i=g.substring(j+1);}final k=new AB.VD(i,h);IB[g]=k;return k;}AB.VD(this.name,this.parent):children=new Map<String,AB>(){if(parent!=null)parent.children[name]=this;} get QB{if(cB){if(kD!=null)return kD;if(parent!=null)return parent.QB;}return OC;} get DD=>nD(); AD( g)=>(g>=QB); log( i, k,[j]){if(AD(i)){var h=new JB(i,k,GC,j);if(cB){var g=this;while (g!=null){g.oD(h);g=g.parent;}}else{dB.oD(h);}}} info( h,[g])=>log(l.uB,h,g); qB( h,[g])=>log(l.PC,h,g); nD(){if(cB||parent==null){if(lD==null){lD=new SB.StreamController<JB>.broadcast(sync:true);mD=lD.stream;}return mD;}else{return dB.nD();}} oD( g){if(lD!=null){lD.add(g);}}static  get dB=>new AB('');static var IB;}class l implements Comparable<l>{final  name;final  value;const l(this.name,this.value);static const  uB=const l('INFO',800);static const  PC=const l('WARNING',900); operator==( g)=>g!=null&&value==g.value; operator<( g)=>value<g.value; operator<=( g)=>value<=g.value; operator>( g)=>value>g.value; operator>=( g)=>value>=g.value; compareTo( g)=>value-g.value; get hashCode=>value; toString()=>name;}class JB{final  QB;final  message;final  BD;final  time;final  FD;static var QC=0;var exception;JB(this.QB,this.message,this.BD,[this.exception]):time=new DateTime.now(),FD=JB.QC++ ;}typedef  t( e);typedef  RC( changes);typedef  u();typedef  SC();class TB{final oldValue;final newValue;final  changes;TB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is TB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>jC(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class BB{static const eB=1;static const fB=2;static const vB=fB|4;static const wB=fB|8;final  type;final key;final oldValue;final newValue;BB(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is BB&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>kC(type,key,oldValue,newValue); toString(){var g;switch (type){case eB:g='field';break;case fB:g='index';break;case vB:g='insert';break;case wB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} TC(g, i,[ k]){if(g is m){var h=g;return gB(h,(o){i(new TB(h,h,o));});}var j=new UB(g,i,k);if(!j.pD()){return ZC;}return j.qD;} gB( g, i){if(g.HB==null)g.HB=new hB();var h=g.HB.add(i);return h.remove;}class m{var HB;var GB;final  hashCode= ++m.UC;static var UC=0;} VC( g)=>g.HB!=null&&g.HB.head!=null; get WC=>FB!=null; XC( g, h,i)=>FB.rD(g,h,i); YC( g, j,k, h, i){if((j&(BB.vB|BB.wB))==0){if(h==i)return;}if(CB==null){CB=[] ;lC(aC);}if(g.GB==null){g.GB=[] ;CB.add(g);}g.GB.add(new BB(j,k,h,i));} ZC(){}var FB;var xB=100;var CB;var DB; aC(){var o=0;while (CB!=null||DB!=null){var j=CB;CB=null;var i=DB;DB=null;if(o++ ==xB){bC(j,i);return;}if(j!=null){for(var h in j){var RB=h.GB;h.GB=null;for(var g=h.HB.head;g!=null;g=g.next){var k=g.value;try {k(RB);}catch (sB,v){KB(sB,v,k,'from ${h}');}}}}if(i!=null){i.forEach((JC,rB){rB.sD();});}}} bC( k, j){var g=[] ;if(k!=null){for(var i in k){var RB=i.GB;g.add('${i} ${RB}');}}if(j!=null){for(var o in j.values){var h=o.sD();if(h!=null)g.add('${o} ${h}');}}CB=null;DB=null;var v='exceeded notifiction limit of ${xB}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';eC(v);}class UB{static var cC=0;final  tD= ++UB.cC;final  uD;final  vD;final  wD;final  xD=new Map();final  yD=[] ;var zD=false;var AE;UB(this.uD,this.vD,this.wD); toString()=>wD!=null?'<observer ${tD}: ${wD}>':'<observer ${tD}>'; pD(){var h=FB;FB=this;try {AE=uD();if(AE is Iterable&&AE is !List&&AE is !m){AE=(AE as Iterable).toList();}}catch (g,i){KB(g,i,uD,'from ${this}');AE=null;}xD.forEach(BE);xD.clear();assert(FB==this);FB=h;CE();return yD.length>0;} DE( i){try {vD(i);}catch (g,h){KB(g,h,vD,'from ${this}');}} CE(){var g=AE;if(g is !m)return;yD.add(gB(g,(h){DE(new TB(g,g,h));}));} rD( o, v,g){var i=xD.putIfAbsent(o,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|v;}catch (j,k){KB(j,k,g,'hashCode or operator == from ${this}');}} BE( i, j){yD.add(gB(i,(k){if(zD)return;for(var g in k){var h=j[g.key];if(h!=null&&(h&g.type)!=0){zD=true;if(DB==null){DB=new tB.SplayTreeMap();}DB[tD]=this;return;}}}));} qD(){for(var g in yD){g();}zD=false;} sD(){if(!zD)return null;var g=AE;qD();pD();try {if(g==AE)return null;}catch (i,j){KB(i,j,g,'operator == from ${this}');return null;}var h=new TB(g,AE);DE(h);return h;}}typedef  dC( message);var eC=(g)=>print(g);typedef  fC(error,stackTrace,obj, message);var KB=gC; gC(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class hC{}class iC{}class q<s>{var EE;var FE;var GE;var HE;q.WD( g,this.GE):HE=g{if(GE!=null)GE.IE++ ;} get next=>FE; get value=>HE;set value( g)=>HE=g; JE( g, h){FE=h;EE=g;if(g!=null)g.FE=this;if(h!=null)h.EE=this;return this;} append( g)=>new q<s>.WD(g,GE).JE(this,FE); remove(){if(GE==null)return;GE.IE-- ;if(EE!=null){EE.FE=FE;}else{GE.KE=FE;}if(FE!=null){FE.EE=EE;}else{GE.LE=EE;}FE=null;EE=null;GE=null;}}class hB<s> extends tB.IterableBase<s>{var KE;var LE; get length=>IE;var IE=0;hB(){} get head=>KE; add( h){var g=new q<s>.WD(h,this);if(LE==null)return KE=LE=g;return LE=g.JE(LE,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new MD<s>(this);}class MD<s> implements Iterator<s>{var ME;var GE;var NE;var OE=-1;MD(this.GE){ME=new List<q>(GE.length);var h=0;var g=GE.head;while (g!=null){ME[h++ ]=g;g=g.next;}} get current=>NE; moveNext(){do{OE++ ;}while(OE<ME.length&&ME[OE].GE!=GE);if(OE<ME.length){NE=ME[OE].value;return true;}else{NE=null;return false;}}}LB(h,g)=>h.hashCode*31+g.hashCode;jC(h,g,i)=>LB(LB(h,g),i);kC(g,i,h,j)=>LB(LB(g,i),LB(h,j)); lC( h()){var g=new UD.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);} mC(i, g,[ h]){var j=i is hC;if(h==null){h=i.toString();}if(!j&&g is EB.Text){g.text=h;}else{var k=g;g=j?new EB.Element.html(h):new EB.Text(h);k.replaceWith(g);}return g;} nC(g){if(g is iC)return g.toString();g=g.toString();return pC(g)?g:'#';}const oC=const["http","https","ftp","mailto"]; pC( h){var g=Uri.parse(h).scheme;if(g=='')return true;return oC.contains(g.toLowerCase())||"MAILTO"==g.toUpperCase();}abstract class VB{ mB(){} insert(); remove();}class ND extends VB{final  FC;var PE;final  listener;ND(this.FC,this.listener); insert(){PE=FC.listen(listener);} remove(){PE.cancel();PE=null;}}abstract class yB extends VB{final exp;final  isFinal;final  nB;var ZB;yB(this.exp,this.isFinal):nB=iB&&WB!=null?WB():null; insert(){if(isFinal){oB();}else if(ZB!=null){throw new StateError('binding already attached');}else{ZB=pB();}} remove(){if(!isFinal){ZB();ZB=null;}} oB(); pB();}class OD extends yB{final  action;OD(g,this.action, h):super(g,h); oB()=>action(new TB(null,exp())); pB()=>AC(exp,action,'generic-binding',nB);}class PD extends yB{final  IC;final  HC;PD( g,this.IC,this.HC, h):super(g,h); QE(g){IC(HC?nC(g):g);} oB()=>QE(exp()); pB()=>AC(exp,(g)=>QE(g.newValue),'dom-property-binding',nB);}class QD extends VB{final  CD;final  children=[] ;final  nodes=[] ;QD(this.CD); listen( i, h){children.add(new ND(i,(g){h(g);tC();}));} YB( h,i){var g=new EB.Text('');children.add(new OD(()=>'${h()}',(j){g=mC(h(),g,j.newValue);},i));return g;} ED(g,j,h,[i=false]){children.add(new PD(g,j,i,h));} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); mB(){for(var g=0,h=children.length;g<h;g++ ){children[g].mB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}var zB=false;var iB=false;var WB=(){try {throw "";}catch (h,g){return g.toString();}};final  MB=new AB('watcher'); qC(g, v,[ j, o]){if(zB)return TC(g,v);if(v==null)return (){};if(NB==null)NB=new hB<OB>();j=j==null?'<unnamed>':j;var i;var h=n.xC;if(g is DC){i=(g as DC).RE;}else if(g is Function){i=g;try {var k=g();if(k is List){h=n.PB;}else if(k is Iterable){h=n.PB;i=()=>g().toList();}else if((k is tB.LinkedHashMap)||(k is tB.SplayTreeMap)){h=n.lB;}else if(k is Map){h=n.kB;}}catch (RB,rB){MB.qB('evaluating ${j} watcher threw error (${RB}, ${rB})');}}else if(g is List){i=()=>g;h=n.PB;}else if(g is Iterable){i=()=>g.toList();h=n.PB;}else if((g is tB.LinkedHashMap)||(g is tB.SplayTreeMap)){i=()=>g;h=n.lB;}else if(g is Map){i=()=>g;h=n.kB;}if(iB&&o==null&&WB!=null){o=WB();}var JC=rC(h,i,v,j,o);var sB=NB.add(JC);return sB.remove;} rC( k, g, j, h, i){switch (k){case n.PB:return new RD(g,j,h,i);case n.lB:return new TD(g,j,h,i);case n.kB:return new SD(g,j,h,i);default:return new OB(g,j,h,i);}} AC(h, i,[ j, k]){var o=qC(h,i,j,k);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new TB(null,g));return o;}var NB;class OB{final  EC;var location;final  SE;static var sC=0;final  RE;final  TE;var UE;OB(this.RE,this.TE,this.EC,this.location):SE=sC++ {UE=RE();} toString()=>'${EC} (id: #${SE})'; zC(){var g=VE();if(WE(g)){var h=UE;XE(g);TE(new TB(h,g));return true;}return false;} WE(g)=>UE!=g; XE(g){if(iB){if(location!=null){MB.info('watcher updated: ${this}, defined at:\n${location}');location=null;}else{MB.info('watcher updated: ${this}');}}UE=g;}VE(){try {return RE();}catch (g,h){MB.qB('${this} watcher threw an exception: ${g}, ${h}');}return UE;}}final  BC=10; tC(){if(NB==null)return;var g;var h=0;do{g=false;for(var i in NB){if(i.zC()){g=true;}}}while(g&& ++h<BC);if(h==BC){MB.qB('Possible loop in watchers propagation, stopped dispatch.');}}typedef  CC<uC>();typedef  vC<uC>( value);class DC<uC>{}class RD<uC> extends OB{RD(g, j, h, i):super(g,j,h,i){XE(VE());} WE( g){return jB(UE,g);} XE(g){UE=new List<uC>.from(g);}}class SD<XB,wC> extends OB{SD(g, j, h, i):super(g,j,h,i){XE(VE());} WE( g){var i=UE.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(UE[h]!=g[h])return true;}return false;} XE(g){UE=new Map<XB,wC>.from(g);}}class TD<XB,wC> extends OB{TD(g, j, h, i):super(g,j,h,i){XE(VE());} WE( g){return jB(g.keys,UE.keys)||jB(g.values,UE.values);} XE(g){UE=new tB.LinkedHashMap.from(g);}} jB( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class n{final YE;const n.XD(this.YE);toString()=>'Enum.${YE}';static const PB=const n.XD('LIST');static const kB=const n.XD('HASH_MAP');static const lB=const n.XD('ORDERED_MAP');static const xC=const n.XD('OTHER');}//@ sourceMappingURL=shout.html_bootstrap.dart.map
